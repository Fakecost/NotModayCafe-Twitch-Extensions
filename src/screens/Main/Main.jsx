import React, { useState, useEffect } from "react";
import "./style.css";

const isLocalDev =
  window.location.hostname.includes("localhost") ||
  window.location.hostname.includes("127.0.0.1") ||
  window.location.hostname.includes("codesandbox.io");

export const Main = () => {
  const [isIdentityLinked, setIsIdentityLinked] = useState(isLocalDev);
  const [token, setToken] = useState(null);

  // ‚úÖ ‡∏£‡∏≠‡πÉ‡∏´‡πâ Twitch.ext ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å
  useEffect(() => {
    if (isLocalDev) return;

    const waitForTwitch = setInterval(() => {
      if (window.Twitch && window.Twitch.ext) {
        console.log("‚úÖ Twitch.ext ready");

        window.Twitch.ext.onAuthorized((auth) => {
          console.log("üü™ Authorized:", auth);
          setToken(auth.token);

          // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à Identity ‡∏à‡∏≤‡∏Å backend
          fetch("https://sunny.bixmy.party/extension/login", {
            method: "POST",
            headers: {
              Authorization: "Bearer " + auth.token,
              "Content-Type": "application/json",
            },
          })
            .then((res) => res.json())
            .then((data) => {
              if (data.userId && !data.userId.startsWith("U")) {
                console.log("‚úÖ Identity linked from server:", data.userId);
                setIsIdentityLinked(true);
              } else {
                console.warn("üîí Identity not granted yet");
              }
            })
            .catch((err) => {
              console.warn("‚ö†Ô∏è Could not check identity:", err);
            });
        });

        clearInterval(waitForTwitch);
      }
    }, 100);
    return () => clearInterval(waitForTwitch);
  }, []);

  // ‚úÖ ‡∏õ‡∏∏‡πà‡∏° Connect
  const handleConnect = () => {
    if (window.Twitch?.ext?.actions?.requestIdShare) {
      console.log("üì£ requestIdShare called");
      window.Twitch.ext.actions.requestIdShare();

      // ‚úÖ Poll ‡∏ã‡πâ‡∏≥‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ó‡∏ô‡∏Å‡∏≤‡∏£ reload
      setTimeout(() => {
        fetch("https://sunny.bixmy.party/extension/login", {
          method: "POST",
          headers: {
            Authorization: "Bearer " + token,
            "Content-Type": "application/json",
          },
        })
          .then((res) => res.json())
          .then((data) => {
            if (data.userId && !data.userId.startsWith("U")) {
              setIsIdentityLinked(true);
              console.log("‚úÖ Grant success after Connect");
            } else {
              console.warn("‚ùå Grant still not linked");
            }
          });
      }, 3000);
    } else {
      console.warn("‚ùå Twitch.ext.actions.requestIdShare not available");
    }
  };

  if (!isIdentityLinked) {
    return (
      <div className="main connect-wrapper">
        <button className="connect-button" onClick={handleConnect}>
          Connect with Twitch
        </button>
      </div>
    );
  }

  // ‚¨áÔ∏è ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÄ‡∏ä‡πà‡∏ô‡∏õ‡∏∏‡πà‡∏°, overlay, gameplay ‚¨áÔ∏è
  return (
    <div className="main">
      <div style={{ color: "white" }}>‚úÖ Identity Linked</div>
    </div>
  );
};
